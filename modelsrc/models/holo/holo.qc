/*
==============================================================================

QC script generated by Half-Life MDL Decompiler 1.2 
2003, Kratisto. Based on code from Valve's HL SDK.

holo.mdl

Original internal name:
"valve/models/holo.mdl"

==============================================================================
*/

$modelname "holo.mdl"
$cd "./"
$include "includes/common/ld/common.qci"


//reference mesh(es)
$include "includes/bodygroups/ld/body.qci"


$include "includes/bonecontrollers/ld/bonecontrollers.qci"

$include "includes/hitboxes/ld/hitboxes.qci"

$sequence "walk" "animations/walk" LX fps 26 loop ACT_WALK 1 
$sequence "longjump" "animations/longjump" fps 30 
$include "includes/animations/ld/troom_talkidle_1.qci"
$sequence "troom_quadjump" "animations/troom_quadjump" AX AY AZR fps 42 { event 1001 1 } 
$sequence "troom_intro" "animations/troom_intro" AX AY AZR fps 20 { event 1008 1 "*holo/holointro.wav" } 
$sequence "quadtalk" "animations/quadtalk" AX AY AZR fps 14 loop { event 1008 1 "*holo/holostn2.wav" } 
$include "includes/animations/ld/troom_talkidle_2.qci"
$sequence "cjump_hole" "animations/cjump_hole" AX AY AZR fps 18 { event 1001 1 } 
$sequence "scharge" "animations/scharge" AX AY AZR fps 14 { event 1008 1 "*holo/holostn1.wav" } 
$sequence "crouch_hole" "animations/crouch_hole" AX AY AZR fps 14 loop { event 1008 1 "*holo/holostn3.wav" } 
$sequence "jump_module" "animations/jump_module" AX AY AZR fps 14 loop { event 1008 1 "*holo/holostn4.wav" } 
$sequence "longjumptalk" "animations/longjumptalk" AX AY AZR fps 14 loop { event 1008 1 "*holo/holostn5.wav" } 
$sequence "healthkit" "animations/healthkit" AX AY AZR fps 14 { event 1008 1 "*holo/holostn6.wav" } 
$sequence "completed" "animations/completed" AX AY AZR fps 14 loop { event 1008 1 "*holo/holostn7.wav" } 
$sequence "target" "animations/target" AX AY AZR fps 14 { event 1008 1 "*holo/holostn16.wav" } 
$sequence "kickup" "animations/kickup" AX AY AZR fps 24 
$sequence "treadwater" "animations/treadwater" AX AY AZR fps 14 loop { event 1008 1 "*holo/holostn14.wav" } 
$sequence "dive" "animations/dive" AX AY AZR fps 30 
$sequence "divetalk_1" "animations/divetalk_1" AX AY AZR fps 14 loop { event 1008 1 "*holo/holostn13.wav" } 
$sequence "aqua_exit" "animations/aqua_exit" AX AY AZR fps 14 loop { event 1008 1 "*holo/holostn15.wav" } 
$sequence "divetalk_2" "animations/divetalk_2" AX AY AZR fps 14 loop { event 1008 1 "*holo/holostn13.wav" } 
$sequence "train" "animations/train" AX AY AZR fps 14 loop { event 1008 1 "*holo/holostn12.wav" } 
$sequence "crate" "animations/crate" AX AY AZR fps 14 loop { event 1008 1 "*holo/holostn10.wav" } 
$sequence "pull_box" "animations/pull_box" AX AY AZR fps 14 loop { event 1008 1 "*holo/holostn10a.wav" } 
$sequence "crate_exit" "animations/crate_exit" AX AY AZR fps 14 loop { event 1008 1 "*holo/holostn11.wav" } 
$sequence "bust_wall" "animations/bust_wall" AX AY AZR fps 16 loop { event 1008 1 "*holo/holostn9.wav" } 
$sequence "ladder" "animations/ladder" AX AY AZR fps 16 loop { event 1008 1 "*holo/holostn8.wav" } 

// End of QC script.
